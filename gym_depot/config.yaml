# entrance:
bus_num: 25
random: True                      # if True: random initial state
seed: 39                           # when random is False

# request:
req_order: [0, 1, 2]              # 0: ent, 1: cs, 2:fs
interlock: false

# CS:
cs_num: 25

# FS:
fs_num: 2

# time:   time steps = minutes
min_duration: 360                  # min number of time steps between first and last arriving bus
max_duration: 600                # max duration
bus_time: 1                       # number of time steps between two simultaneously arrived buses
charge_time: 120                 # number of time steps needed to charge to the next level
fuel_time: 5                     # number of time steps needed to fuel to the next level
time_delay: 4                     # number of time steps considered as delay
travel_time: [[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
              [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
              [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]

# reward:
inst: 10                                 # 0 for evaluation
fail: -100
win: 100

# render fps:
render_reset: 1
render_fast: 10
render_slow: 0.2                # if fail or success

# training:
sb3_model: PPO
training: 'training5_0.001/'
models_dir: 'exp/models/'
logs_dir: 'exp/logs/'
device: cuda:1
tr_render: False

# evaluation:
model_ev: PPO
model_path_ev: 'models/training5/PPO-1689268753/14890000'    # model path or name of rule based methods
results_dir: 'results/'
episode_num: 100
iteration_num: 5
save_graph: False
show_graph: False
ev_render: False
